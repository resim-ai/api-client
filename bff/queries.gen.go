// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package bff

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type MetricsTemplate struct {
	Contents string `json:"contents"`
	Name     string `json:"name"`
}

// GetContents returns MetricsTemplate.Contents, and is useful for accessing the field via an interface.
func (v *MetricsTemplate) GetContents() string { return v.Contents }

// GetName returns MetricsTemplate.Name, and is useful for accessing the field via an interface.
func (v *MetricsTemplate) GetName() string { return v.Name }

// UpdateMetricsConfigResponse is returned by UpdateMetricsConfig on success.
type UpdateMetricsConfigResponse struct {
	// Update metrics config with the given configuration
	UpdateMetricsConfig string `json:"updateMetricsConfig"`
}

// GetUpdateMetricsConfig returns UpdateMetricsConfigResponse.UpdateMetricsConfig, and is useful for accessing the field via an interface.
func (v *UpdateMetricsConfigResponse) GetUpdateMetricsConfig() string { return v.UpdateMetricsConfig }

// __UpdateMetricsConfigInput is used internally by genqlient
type __UpdateMetricsConfigInput struct {
	ProjectId     string            `json:"projectId"`
	Config        string            `json:"config"`
	TemplateFiles []MetricsTemplate `json:"templateFiles"`
	Branch        string            `json:"branch"`
}

// GetProjectId returns __UpdateMetricsConfigInput.ProjectId, and is useful for accessing the field via an interface.
func (v *__UpdateMetricsConfigInput) GetProjectId() string { return v.ProjectId }

// GetConfig returns __UpdateMetricsConfigInput.Config, and is useful for accessing the field via an interface.
func (v *__UpdateMetricsConfigInput) GetConfig() string { return v.Config }

// GetTemplateFiles returns __UpdateMetricsConfigInput.TemplateFiles, and is useful for accessing the field via an interface.
func (v *__UpdateMetricsConfigInput) GetTemplateFiles() []MetricsTemplate { return v.TemplateFiles }

// GetBranch returns __UpdateMetricsConfigInput.Branch, and is useful for accessing the field via an interface.
func (v *__UpdateMetricsConfigInput) GetBranch() string { return v.Branch }

// The mutation executed by UpdateMetricsConfig.
const UpdateMetricsConfig_Operation = `
mutation UpdateMetricsConfig ($projectId: String!, $config: String!, $templateFiles: [MetricsTemplate!]!, $branch: String) {
	updateMetricsConfig(projectId: $projectId, config: $config, templateFiles: $templateFiles, branch: $branch)
}
`

func UpdateMetricsConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	projectId string,
	config string,
	templateFiles []MetricsTemplate,
	branch string,
) (data_ *UpdateMetricsConfigResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMetricsConfig",
		Query:  UpdateMetricsConfig_Operation,
		Variables: &__UpdateMetricsConfigInput{
			ProjectId:     projectId,
			Config:        config,
			TemplateFiles: templateFiles,
			Branch:        branch,
		},
	}

	data_ = &UpdateMetricsConfigResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
